service: go-serverless-services
plugins:
  - serverless-offline
frameworkVersion: '3'

provider:
  name: aws
  runtime: go1.x
  region: ap-southeast-1
  environment:
    MONGO_USER: ${ssm:/lambda/ahorro/prod/MONGO_USER}
    MONGO_PASSWORD: ${ssm:/lambda/ahorro/prod/MONGO_PASSWORD}
    MONGO_PATH: ${ssm:/lambda/swimpool/prod/MONGO_PATH}
    ACCESS_TOKEN_EXPIRATION_TIME: 900
    ACCESS_TOKEN_SECRET: ${ssm:/lambda/ahorro/prod/JWT_ACCESS_TOKEN_SECRET}
    REFRESH_TOKEN_EXPIRATION_TIME: 36000
    REFRESH_TOKEN_SECRET: ${ssm:/lambda/ahorro/prod/JWT_REFRESH_TOKEN_SECRET}
    TZ: Asia/Taipei

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  dailyfetch:
    handler: bin/dailyfetch
    events:
      - httpApi:
          path: /crowd/daily
          method: get
  crowdscraper:
    handler: bin/crowdscraper
    events:
      - schedule: cron(0,30 0-13,23 * * ? *)
  fetchentries:
    handler: bin/fetchentries
    events:
      - httpApi:
          path: /entries
          method: get
  login:
    handler: bin/login
    events:
      - httpApi:
          path: /auth/login
          method: post